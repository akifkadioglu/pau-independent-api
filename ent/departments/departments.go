// Code generated by ent, DO NOT EDIT.

package departments

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the departments type in the database.
	Label = "departments"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDegreeType holds the string denoting the degree_type field in the database.
	FieldDegreeType = "degree_type"
	// FieldQuota holds the string denoting the quota field in the database.
	FieldQuota = "quota"
	// Table holds the table name of the departments in the database.
	Table = "departments"
)

// Columns holds all SQL columns for departments fields.
var Columns = []string{
	FieldID,
	FieldCode,
	FieldName,
	FieldDegreeType,
	FieldQuota,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDegreeType holds the default value on creation for the "degree_type" field.
	DefaultDegreeType bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// Order defines the ordering method for the Departments queries.
type Order func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCode orders the results by the code field.
func ByCode(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldCode, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByDegreeType orders the results by the degree_type field.
func ByDegreeType(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldDegreeType, opts...).ToFunc()
}

// ByQuota orders the results by the quota field.
func ByQuota(opts ...sql.OrderTermOption) Order {
	return sql.OrderByField(FieldQuota, opts...).ToFunc()
}
